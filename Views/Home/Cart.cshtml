@model List<trefle888.Models.CartItem>

<link rel="stylesheet" href="~/css/Cart.css" asp-append-version="true" />

<div class="alert alert-success alert-dismissible fade d-none text-capitalize text-center" role="alert" id="success-alert">
    <h5 class="alert-heading">Order Placed Successfully!</h5>
    <hr />
    <p>Trefle-8 team will be there from 3-5 working days</p>
    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
</div>


<div class="master-container">
    
    <div class="card cart">
        <label class="title">Your cart</label>
        <div class="products">
            @foreach (var item in Model) 
            {
                <div id="product-@item.ProductId-@item.Size" class="product">
                    <div>
                        <span>@item.ProductName</span>
                        <p>Size: @item.Size</p>
                    </div>
                    <div class="quantity">
                        <button onclick="decrementQuantity(@item.ProductId, '@item.Size')" class="decrement-btn">
                            <svg fill="none" viewBox="0 0 24 24" height="14" width="14" xmlns="http://www.w3.org/2000/svg">
                                <path stroke-linejoin="round" stroke-linecap="round" stroke-width="2.5" stroke="#47484b" d="M20 12L4 12"></path>
                            </svg>
                        </button>
                        <label id="quantity-label-@item.ProductId-@item.Size">@item.Quantity</label>
                        <button onclick="incrementQuantity(@item.ProductId, '@item.Size')" class="increment-btn">
                            <svg fill="none" viewBox="0 0 24 24" height="14" width="14" xmlns="http://www.w3.org/2000/svg">
                                <path stroke-linejoin="round" stroke-linecap="round" stroke-width="2.5" stroke="#47484b" d="M12 4V20M20 12H4"></path>
                            </svg>
                        </button>
                        <button onclick="removeFromCart(@item.ProductId, '@item.Size')" class="remove-btn" style="display: none;">
                        </button>
                    </div>

                    <label class="price small">$@item.ProductPrice.ToString("0.00")</label>
                </div>
            }
        </div>
    </div>

    <div class="card coupons">
        <label class="title">Apply coupons</label>
        <form class="form" onsubmit="applyCoupon(event)">
            <input type="text" placeholder="Apply your coupons here" class="input_field" id="coupon-input">
            <button type="submit">Apply</button>
        </form>
    </div>

    <div class="card checkout">
        <label class="title">Checkout</label>
        <div class="details">
            <span>Your cart subtotal:</span>
            <span id="subtotal">$@Model.Sum(item => item.ProductPrice * item.Quantity).ToString("0.00")</span>
            <span>Discount through applied coupons:</span>
            <span id="discount">$0.00</span>
            <span id="shipping-label">Shipping fees:</span>
            <span id="shipping-fee">$4.99</span>
        </div>
        <div class="checkout--footer">
            <label class="price"><sup>$</sup><span id="total-price">@Model.Sum(item => item.ProductPrice * item.Quantity + 4.99).ToString("0.00")</span></label>
            <button class="checkout-btn">Checkout</button>
        </div>
    </div>
</div>
 





<script>
// Function to show the success alert
function showSuccessAlert() {
    const successAlert = document.getElementById('success-alert');
    successAlert.classList.remove('d-none');

    // Disable the checkout button after showing the alert
    const checkoutBtn = document.querySelector('.checkout-btn');
    checkoutBtn.disabled = true;
    checkoutBtn.style.opacity = '0.5';
    checkoutBtn.style.cursor = 'not-allowed';

}

// Function to close the alert
function closeAlert() {
    const successAlert = document.getElementById('success-alert');
    successAlert.classList.add('d-none');
}

// Attach event listener to the checkout button
document.addEventListener('DOMContentLoaded', () => {
    const checkoutBtn = document.querySelector('.checkout-btn');
    const closeBtn = document.querySelector('.btn-close');

    // Checkout button click handler
    checkoutBtn.addEventListener('click', (event) => {
        // Prevent multiple clicks
        if (!checkoutBtn.disabled) {
            // Here you would typically add actual checkout logic
            // For example, sending order to server, processing payment, etc.
            showSuccessAlert();
        }
    });

    // Close button event listener
    closeBtn.addEventListener('click', closeAlert);
});

</script>


<script>
    let activeCouponCode = '';

    function decrementQuantity(productId, size) {
      const quantityLabel = document.getElementById(`quantity-label-${productId}-${size}`);
      let quantity = parseInt(quantityLabel.textContent);

      if (quantity === 1) {
        removeFromCart(productId, size);
      } else {
        quantity--;
        quantityLabel.textContent = quantity;
        updateQuantityOnServer(productId, size, quantity);
        updateTotals();
      }
    }

    function incrementQuantity(productId, size) {
      const quantityLabel = document.getElementById(`quantity-label-${productId}-${size}`);
      let quantity = parseInt(quantityLabel.textContent);
      quantity++;
      quantityLabel.textContent = quantity;
      updateQuantityOnServer(productId, size, quantity);
      updateTotals();
    }

    function updateQuantityOnServer(productId, size, quantity) {
      fetch('/Cart/UpdateQuantity', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/x-www-form-urlencoded',
        },
        body: `productId=${productId}&size=${size}&quantity=${quantity}`
      });
    }

    function updateTotals() {
      const products = document.querySelectorAll('.product');
      let subtotal = 0;

      products.forEach(product => {
        const price = parseFloat(product.querySelector('.price.small').textContent.replace('$', ''));
        const quantity = parseInt(product.querySelector('label[id^="quantity-label"]').textContent);
        subtotal += price * quantity;
      });

      // If no products in cart, reset coupon and shipping
      if (products.length === 0) {
        document.getElementById('discount').textContent = '$0.00';
        document.getElementById('shipping-fee').textContent = '$0.00';
        document.getElementById('shipping-label').style.display = 'none';
        document.getElementById('total-price').textContent = '0.00';
        activeCouponCode = '';
      } else {
        const shippingFee = 4.99;
        document.getElementById('shipping-fee').textContent = `$${shippingFee.toFixed(2)}`;
        document.getElementById('shipping-label').style.display = 'inline';

        // Reapply coupon if there was an active coupon
        if (activeCouponCode === 'AHMKC') {
          const discount = subtotal * 0.1;
          const total = subtotal + shippingFee - discount;
          document.getElementById('discount').textContent = `$${discount.toFixed(2)}`;
          document.getElementById('total-price').textContent = total.toFixed(2);
        } else {
          document.getElementById('discount').textContent = '$0.00';
          const total = subtotal + shippingFee;
          document.getElementById('total-price').textContent = total.toFixed(2);
        }

        document.getElementById('subtotal').textContent = `$${subtotal.toFixed(2)}`;
      }
    }

    function applyCoupon(event) {
      event.preventDefault();
      const couponInput = document.getElementById("coupon-input");
      const couponCode = couponInput.value.trim();

      if (couponCode === "AHMKC") {
        activeCouponCode = couponCode;
        const subtotal = parseFloat(document.getElementById("subtotal").textContent.replace('$', ''));
        const discount = subtotal * 0.1;
        const shippingFee = 4.99;
        const total = subtotal + shippingFee - discount;
        document.getElementById("discount").textContent = `$${discount.toFixed(2)}`;
        document.getElementById("total-price").textContent = total.toFixed(2);
      } else {
        alert("Invalid coupon code.");
        activeCouponCode = '';
        updateTotals(); // Reset to original total
      }

      couponInput.value = "";
    }

       function removeFromCart(productId, size) {
      fetch('/Cart/RemoveFromCart', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/x-www-form-urlencoded',
        },
        body: `productId=${productId}&size=${size}`
      })
      .then(response => {
        if (response.ok) {
          const productElement = document.getElementById(`product-${productId}-${size}`);
          productElement.remove();

          updateTotals();

          // Additional check to reset everything if cart is now empty
          const remainingProducts = document.querySelectorAll('.product');
          if (remainingProducts.length === 0) {
            document.getElementById('subtotal').textContent = '$0.00';
            document.getElementById('discount').textContent = '$0.00';
            document.getElementById('shipping-fee').textContent = '$0.00';
            document.getElementById('shipping-label').style.display = 'none';
            document.getElementById('total-price').textContent = '0.00';
            activeCouponCode = '';
          }

          alert('Item removed from cart.');
        } else {
          alert('Failed to remove the item from the cart.');
        }
      });
    }
</script>